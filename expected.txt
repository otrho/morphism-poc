  0 - initialising a to 0
    - stack:
  1 - initialising b to (11 22 33 44)
    - stack:
  2 - pushing number 4
    - stack: 4
  3 - pushing variable a
    - stack: 4 0
  4 - pushing number 22
    - stack: 4 0 22
  5 - dropping
    - stack: 4 0
  6 - pushing variable b
    - stack: 4 0 44 33 22 11
  7 - overing
    - stack: 4 0 44 33 22 11 22
  8 - overing
    - stack: 4 0 44 33 22 11 22 11
  9 - duping
    - stack: 4 0 44 33 22 11 22 11 11
 10 - eq
    - stack: 4 0 44 33 22 11 22 1
 11 - pushing number 2
    - stack: 4 0 44 33 22 11 22 1 2
 12 - eq
    - stack: 4 0 44 33 22 11 22 0
 13 - dropping
    - stack: 4 0 44 33 22 11 22
 14 - lt
    - stack: 4 0 44 33 22 1
 15 - duping
    - stack: 4 0 44 33 22 1 1
 16 - lt
    - stack: 4 0 44 33 22 0
 17 - dropping
    - stack: 4 0 44 33 22
 18 - gt
    - stack: 4 0 44 1
 19 - duping
    - stack: 4 0 44 1 1
 20 - gt
    - stack: 4 0 44 0
 21 - dropping
    - stack: 4 0 44
 22 - pushing number 33
    - stack: 4 0 44 33
 23 - overing
    - stack: 4 0 44 33 44
 24 - overing
    - stack: 4 0 44 33 44 33
 25 - lte
    - stack: 4 0 44 33 0
 26 - duping
    - stack: 4 0 44 33 0 0
 27 - lte
    - stack: 4 0 44 33 1
 28 - pushing number 2
    - stack: 4 0 44 33 1 2
 29 - lte
    - stack: 4 0 44 33 1
 30 - dropping
    - stack: 4 0 44 33
 31 - gte
    - stack: 4 0 1
 32 - duping
    - stack: 4 0 1 1
 33 - gte
    - stack: 4 0 1
 34 - pushing number 2
    - stack: 4 0 1 2
 35 - gte
    - stack: 4 0 0
 36 - dropping
    - stack: 4 0
 37 - pushing variable b
    - stack: 4 0 44 33 22 11
 38 - add
    - stack: 4 0 44 33 33
 39 - sub
    - stack: 4 0 44 0
 40 - dropping
    - stack: 4 0 44
 41 - pushing number 11
    - stack: 4 0 44 11
 42 - div
    - stack: 4 0 4
 43 - pushing number 3
    - stack: 4 0 4 3
 44 - mod
    - stack: 4 0 1
 45 - pushing number 11
    - stack: 4 0 1 11
 46 - and
    - stack: 4 0 1
 47 - or
    - stack: 4 1
 48 - pushing number 0
    - stack: 4 1 0
 49 - and
    - stack: 4 0
 50 - pushing number 0
    - stack: 4 0 0
 51 - or
    - stack: 4 0
 52 - dropping
    - stack: 4
 53 - not
    - stack: 0
 54 - not
    - stack: 1
 55 - pushing number 99
    - stack: 1 99
 56 - pushing number 88
    - stack: 1 99 88
 57 - pushing number 77
    - stack: 1 99 88 77
 58 - swapping
    - stack: 1 99 77 88
 59 - rotating
    - stack: 1 77 88 99
 60 - swapping
    - stack: 1 77 99 88
 61 - swapping
    - stack: 1 77 88 99
 62 - rotating
    - stack: 1 88 99 77
 63 - rotating
    - stack: 1 99 77 88
 64 - dropping
    - stack: 1 99 77
 65 - dropping
    - stack: 1 99
 66 - dropping
    - stack: 1
 67 - pushing array 'b' length: 4
    - stack: 1 4
 68 - begin rep loop
    - stack: 1
    - control stack: @69,0/4x
 69 - push loop index: 0
    - stack: 1 0
    - control stack: @69,0/4x
 70 - pushing array 'b' index 0 value 11
    - stack: 1 11
    - control stack: @69,0/4x
 71 - index+1 1 is less than 4, loop back to 69
    - stack: 1 11
    - control stack: @69,1/4x
 69 - push loop index: 1
    - stack: 1 11 1
    - control stack: @69,1/4x
 70 - pushing array 'b' index 1 value 22
    - stack: 1 11 22
    - control stack: @69,1/4x
 71 - index+1 2 is less than 4, loop back to 69
    - stack: 1 11 22
    - control stack: @69,2/4x
 69 - push loop index: 2
    - stack: 1 11 22 2
    - control stack: @69,2/4x
 70 - pushing array 'b' index 2 value 33
    - stack: 1 11 22 33
    - control stack: @69,2/4x
 71 - index+1 3 is less than 4, loop back to 69
    - stack: 1 11 22 33
    - control stack: @69,3/4x
 69 - push loop index: 3
    - stack: 1 11 22 33 3
    - control stack: @69,3/4x
 70 - pushing array 'b' index 3 value 44
    - stack: 1 11 22 33 44
    - control stack: @69,3/4x
 71 - index+1 4 equals 4, end loop
    - stack: 1 11 22 33 44
 72 - comparing 4 elements of b with stack: pushing 1
    - stack: 1 1
 73 - assert (1)
    - stack: 1
 74 - pushing number 0
    - stack: 1 0
 75 - assert (0)
ASSERTION FAILED
